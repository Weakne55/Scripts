# samplesheet75.csv
sample,fastq_1,fastq_2,replicate
SRR15321075,ATAC-raw-data/SRR15321075_1.fastq.gz,ATAC-raw-data/SRR15321075_2.fastq.gz,1

# SRR75.yaml
input: './samplesheet75.csv'
outdir: './ATAC-data/SRR15321075/'
fasta: './DanRer11/GCF_000002035.6_GRCz11_genomic.fna' 
read_length: 200
gtf: './DanRer11/Danio_rerio.GRCz11.111.NCnames.gtf'
narrow_peak: True
skip_peak_annotation: True

# pipeline run
nextflow run nf-core/atacseq -profile docker -params-file SRR75.yaml

# peak calling
java -jar ~/actual/HMMRATAC_V1.2.10_exe.jar -b SRR15321075_REP1.mLb.clN.sorted.bam -i SRR15321075_REP1.mLb.clN.sorted.bam.bai -g ~/actual/genome.info --minlen 100 —threshold 40 -o SRR15321075_min100_threshold40

# move to another dir
mv SRR15321075_min100_threshold40_peaks.gappedPeak ~/actual/ss15
mv SRR15321074.threshold40_peaks.gappedPeak ~/actual/ss15

#get narrowPeak from gappedPeak
awk '{print $1 "\t" $7 "\t" $8 "\t" $4}' SRR15321075_min100_threshold40_peaks.gappedPeak > SRR15321075.narrowPeak.tmp

awk '{print $1 "\t" $7 "\t" $8 "\t" $4}' SRR15321074.threshold40_peaks.gappedPeak > SRR15321074.narrowPeak.tmp

# remove last row with 0 0 coordinates
sed '$d' SRR15321075.narrowPeak.tmp > SRR15321075.narrowPeak 
sed '$d' SRR15321074.narrowPeak.tmp > SRR15321074.narrowPeak

#remove tmp files
rm SRR15321074.narrowPeak.tmp SRR15321075.narrowPeak.tmp

# intersect peaks in different replicates of one experiment
bedtools intersect -a SRR15321074.narrowPeak -b SRR15321075.narrowPeak > intersect_ss15.bed 

# intersect called peaks with our genes and their 50kb upstream and downstreams
bedtools intersect -a intersect_ss15.bed -b pigment_genes.sorted.bed -wo -f 0.1 > intersect_pigment_15ss.bed 

# because we have several encodings for the same gene, then we need to leave only 1 name for 1 gene
awk '{print $1 "\t" $2 "\t" $3 "\t" $4 "\t" $8}' intersect_pigment_ss15.bed  | sort -k3,3 -u  > intersect_pigment_ss15.uniq.bed

# check amount of peaks
wc -l intersect_pigment_15ss.uniq.bed

# convert rows in bed files for convinient usage in sarus
awk '{print $1 "\t" $2 "\t" $3 "\t" $1":"$2"-"$3":"$4":"$5}' intersect_pigment_15ss.uniq.bed > intersect_pigment_15ss.names.bed

# get fasta sequences for sarus
bedtools getfasta -fi ~/actual/DanRer11/GCF_000002035.6_GRCz11_genomic.fna -bed intersect_pigment_15ss.names.bed -name > intersect_pigment_15ss.names.mfa

# script for sarus usage 
./sarus_scores.sh intersect_pigment_24hpf.names.mfa

sort -r -k 13,13 15ss.TFBS.logpvalue.gappedPeak | head -58 > 15ss.TFBS.logpvalue5.gappedPeak - нужно переписать команду чтобы она брала значения выше 5 в строке 13, а не как я руками наше

sort -r -k2,2n 15ss.TFBS.logpvalue5.gappedPeak > 15ss.TFBS.logpvalue5.sorted.gappedPeak - отсортировали значения по 2 столбцу

lions.py 15ss.TFBS.logpvalue5.sorted.gappedPeak > 15ss.TFBS.sequences.gappedPeak
